// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.0
// source: statistics/statistics.proto

package statistics

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	StatisticsService_GetBookingStats_FullMethodName     = "/carrental.com.proto.statistics.StatisticsService/GetBookingStats"
	StatisticsService_GetCarStats_FullMethodName         = "/carrental.com.proto.statistics.StatisticsService/GetCarStats"
	StatisticsService_GetRevenueStats_FullMethodName     = "/carrental.com.proto.statistics.StatisticsService/GetRevenueStats"
	StatisticsService_GetPopularLocations_FullMethodName = "/carrental.com.proto.statistics.StatisticsService/GetPopularLocations"
	StatisticsService_GetUserStats_FullMethodName        = "/carrental.com.proto.statistics.StatisticsService/GetUserStats"
)

// StatisticsServiceClient is the client API for StatisticsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StatisticsServiceClient interface {
	GetBookingStats(ctx context.Context, in *BookingStatsRequest, opts ...grpc.CallOption) (*BookingStatsResponse, error)
	GetCarStats(ctx context.Context, in *CarStatsRequest, opts ...grpc.CallOption) (*CarStatsResponse, error)
	GetRevenueStats(ctx context.Context, in *RevenueStatsRequest, opts ...grpc.CallOption) (*RevenueStatsResponse, error)
	GetPopularLocations(ctx context.Context, in *PopularLocationsRequest, opts ...grpc.CallOption) (*PopularLocationsResponse, error)
	GetUserStats(ctx context.Context, in *UserStatsRequest, opts ...grpc.CallOption) (*UserStatsResponse, error)
}

type statisticsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStatisticsServiceClient(cc grpc.ClientConnInterface) StatisticsServiceClient {
	return &statisticsServiceClient{cc}
}

func (c *statisticsServiceClient) GetBookingStats(ctx context.Context, in *BookingStatsRequest, opts ...grpc.CallOption) (*BookingStatsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BookingStatsResponse)
	err := c.cc.Invoke(ctx, StatisticsService_GetBookingStats_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsServiceClient) GetCarStats(ctx context.Context, in *CarStatsRequest, opts ...grpc.CallOption) (*CarStatsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CarStatsResponse)
	err := c.cc.Invoke(ctx, StatisticsService_GetCarStats_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsServiceClient) GetRevenueStats(ctx context.Context, in *RevenueStatsRequest, opts ...grpc.CallOption) (*RevenueStatsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RevenueStatsResponse)
	err := c.cc.Invoke(ctx, StatisticsService_GetRevenueStats_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsServiceClient) GetPopularLocations(ctx context.Context, in *PopularLocationsRequest, opts ...grpc.CallOption) (*PopularLocationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PopularLocationsResponse)
	err := c.cc.Invoke(ctx, StatisticsService_GetPopularLocations_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statisticsServiceClient) GetUserStats(ctx context.Context, in *UserStatsRequest, opts ...grpc.CallOption) (*UserStatsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserStatsResponse)
	err := c.cc.Invoke(ctx, StatisticsService_GetUserStats_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatisticsServiceServer is the server API for StatisticsService service.
// All implementations must embed UnimplementedStatisticsServiceServer
// for forward compatibility.
type StatisticsServiceServer interface {
	GetBookingStats(context.Context, *BookingStatsRequest) (*BookingStatsResponse, error)
	GetCarStats(context.Context, *CarStatsRequest) (*CarStatsResponse, error)
	GetRevenueStats(context.Context, *RevenueStatsRequest) (*RevenueStatsResponse, error)
	GetPopularLocations(context.Context, *PopularLocationsRequest) (*PopularLocationsResponse, error)
	GetUserStats(context.Context, *UserStatsRequest) (*UserStatsResponse, error)
	mustEmbedUnimplementedStatisticsServiceServer()
}

// UnimplementedStatisticsServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedStatisticsServiceServer struct{}

func (UnimplementedStatisticsServiceServer) GetBookingStats(context.Context, *BookingStatsRequest) (*BookingStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBookingStats not implemented")
}
func (UnimplementedStatisticsServiceServer) GetCarStats(context.Context, *CarStatsRequest) (*CarStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCarStats not implemented")
}
func (UnimplementedStatisticsServiceServer) GetRevenueStats(context.Context, *RevenueStatsRequest) (*RevenueStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRevenueStats not implemented")
}
func (UnimplementedStatisticsServiceServer) GetPopularLocations(context.Context, *PopularLocationsRequest) (*PopularLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPopularLocations not implemented")
}
func (UnimplementedStatisticsServiceServer) GetUserStats(context.Context, *UserStatsRequest) (*UserStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserStats not implemented")
}
func (UnimplementedStatisticsServiceServer) mustEmbedUnimplementedStatisticsServiceServer() {}
func (UnimplementedStatisticsServiceServer) testEmbeddedByValue()                           {}

// UnsafeStatisticsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StatisticsServiceServer will
// result in compilation errors.
type UnsafeStatisticsServiceServer interface {
	mustEmbedUnimplementedStatisticsServiceServer()
}

func RegisterStatisticsServiceServer(s grpc.ServiceRegistrar, srv StatisticsServiceServer) {
	// If the following call pancis, it indicates UnimplementedStatisticsServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&StatisticsService_ServiceDesc, srv)
}

func _StatisticsService_GetBookingStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookingStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServiceServer).GetBookingStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StatisticsService_GetBookingStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServiceServer).GetBookingStats(ctx, req.(*BookingStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatisticsService_GetCarStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServiceServer).GetCarStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StatisticsService_GetCarStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServiceServer).GetCarStats(ctx, req.(*CarStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatisticsService_GetRevenueStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevenueStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServiceServer).GetRevenueStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StatisticsService_GetRevenueStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServiceServer).GetRevenueStats(ctx, req.(*RevenueStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatisticsService_GetPopularLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PopularLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServiceServer).GetPopularLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StatisticsService_GetPopularLocations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServiceServer).GetPopularLocations(ctx, req.(*PopularLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StatisticsService_GetUserStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatisticsServiceServer).GetUserStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StatisticsService_GetUserStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatisticsServiceServer).GetUserStats(ctx, req.(*UserStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StatisticsService_ServiceDesc is the grpc.ServiceDesc for StatisticsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StatisticsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "carrental.com.proto.statistics.StatisticsService",
	HandlerType: (*StatisticsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBookingStats",
			Handler:    _StatisticsService_GetBookingStats_Handler,
		},
		{
			MethodName: "GetCarStats",
			Handler:    _StatisticsService_GetCarStats_Handler,
		},
		{
			MethodName: "GetRevenueStats",
			Handler:    _StatisticsService_GetRevenueStats_Handler,
		},
		{
			MethodName: "GetPopularLocations",
			Handler:    _StatisticsService_GetPopularLocations_Handler,
		},
		{
			MethodName: "GetUserStats",
			Handler:    _StatisticsService_GetUserStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "statistics/statistics.proto",
}
